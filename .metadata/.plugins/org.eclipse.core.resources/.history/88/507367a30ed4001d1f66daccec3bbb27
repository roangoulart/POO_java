package controle;

import visualizacao.EntradaSaida;
import modelo.Conta;
import javax.swing.JOptionPane;
import java.util.ArrayList;

public class Controladora {

	// ArrayList<Movimentacao> listaDeMovimentacao = new ArrayList<>();
	Conta conta = new Conta();

	public void exibeMenu() {
		String informacoes = "";
		String titularDaConta = EntradaSaida.solicitarTitularDaConta();
		;
		int tipoConta = EntradaSaida.solicitarTipo();
		conta.setTitularDaConta(titularDaConta);
		conta.setTipoConta(tipoConta);
	}

	int opcao;do
	{
		opcao = EntradaSaida.solicitaOpcao();
		double saldo;

		switch (opcao) {
		case 0:
			conta.depositar();
			break;

		case 1:
			conta.sacar();
			break;

		case 2:
			saldo = conta.getSaldo();
			EntradaSaida.eixibirSaldo(saldo);
			break;

		case 3:
			saldo = conta.getSaldo();
			EntradaSaida.exibirDadosDaConta(titularDaConta, tipoConta, saldo);
			break;
		case 4:
			informacoes.this.conta.gerarExtrato();
			EntradaSaida.exibirExtratoCompleto(informacoes);
			break;
		}
	}while(opcao!=5);EntradaSaida.exibeMsgEncerraPrograma();System.exit(0);

	String tipoConta = "";
	String dataDeMovimentacao = "";
	double saldo = 0;
	String dataDeDeposito = "";
	String dataDeSaque = "";

	titularDaConta=EntradaSaida.solicitarTitular();tipo=EntradaSaida.solicitarTipoDeConta();if(tipo==1)
	{
		tipoConta = "Conta Poupança";
	}else if(tipo==2)
	{
		tipoConta = "Conta Corrente";
	}else
	{
		System.exit(0);
	}

	do
	{
		double saque = 0;
		double depositar = 0;
		opcao = EntradaSaida.solicitaOpcao();

		switch (opcao) {
		case 0:
			// depositar = Conta.getDepositar();
			// conta.setDepositar(EntradaSaida.solicitarInformacoesDeposito());
			depositar = EntradaSaida.solicitarInformacoesDeposito();
			saldo = Conta.depositar(depositar, saldo);
			dataDeDeposito = EntradaSaida.solicitarData();
			// movimentacao.novaMovimentacao();
			break;

		case 1:
			if (saldo <= -1000) {
				JOptionPane.showMessageDialog(null, "Limite negativo atingido", "Erro", JOptionPane.WARNING_MESSAGE);
			} else {
				saque = EntradaSaida.solicitarInformacoesSaque();
				// saldo = Conta.getSaque();
				saldo = Conta.sacar(saque, saldo);
				dataDeSaque = EntradaSaida.solicitarData();
			}
			break;

		case 2:
			EntradaSaida.exibirSaldo(saldo);
			break;
		case 3:
			EntradaSaida.exibirDadosDaConta(titularDaConta, tipoConta, saldo);
			break;

		/*
		 * case 4: informacoes = this.conta.gerarExtrato();
		 * EntradaSaida.exibirExtratoCompleto(informacoes);
		 * 
		 * break;
		 */

		case 5:
			JOptionPane.showMessageDialog(null, "O programa será encerrado", "Sair", JOptionPane.INFORMATION_MESSAGE);
			System.exit(0);
			break;

		/*
		 * case 6:
		 * 
		 * break;
		 */
		}
	}while(opcao!=7);
}}
