package controle;

import visualizacao.EntradaSaida;
import modelo.Conta;
import javax.swing.JOptionPane;
import java.util.ArrayList;

public class Controladora {

	ArrayList<Movimentacao> listaDeMovimentacao = new ArrayList<>();
	private Conta conta = new Conta();
	private Date dt = new Date();
	private SimpleDateFormat formato = new SimpleDateFormat("dd/mm/yyyy");
	private formato.format(dt)

	public void exibeMenu() {
		conta.setTitularDaConta("Roan");

		int opcao = 0;
		int tipo = 0;
		String tipoConta = "";
		String titularDaConta = "";
		String dataTransferencia = "";
		double saldo = 0;

		titularDaConta = EntradaSaida.solicitarTitular();
		tipo = EntradaSaida.solicitarTipoDeConta();
		if (tipo == 1) {
			tipoConta = "Conta Poupança";
		} else if (tipo == 2) {
			tipoConta = "Conta Corrente";
		}

		do {
			double saque = 0;
			double depositar = 0;
			opcao = EntradaSaida.solicitaOpcao();

			switch (opcao) {
			case 0:
				depositar = EntradaSaida.solicitarInformacoesDeposito();
				saldo = Conta.depositar(depositar, saldo);
				dataTransferencia = EntradaSaida.solicitarData();

				break;

			case 1:
				if (saldo <= -1000) {
					JOptionPane.showMessageDialog(null, "Limite negativo atingido", "Erro",
							JOptionPane.WARNING_MESSAGE);
				} else {
					saque = EntradaSaida.solicitarInformacoesSaque();
					saldo = Conta.sacar(saque, saldo);
					dataTransferencia = EntradaSaida.solicitarData();
				}
				break;

			case 2:
				EntradaSaida.exibirSaldo(saldo);
				break;
			case 3:
				EntradaSaida.exibirDadosDaConta(titularDaConta, tipoConta, saldo);
				break;

			case 4:
				EntradaSaida.exibirExtratoDeDepositos()
				break;
			/*
			 * case 5:
			 * 
			 * break; case 6:
			 * 
			 * break;
			 */
			}
		} while (opcao != 7);
	}
}
